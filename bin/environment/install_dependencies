#!/usr/bin/env bash
set -eu

BIN_DIR=$(cd "$(dirname "$0")"; pwd)/..
ANSWER_PATH="$BIN_DIR/../.cache/answer"
declare -r BIN_DIR
declare -r ANSWER_PATH

#######################################
# 参数:
#   $1: OS
#######################################

function check_user_is_sudoer() {
    declare sudoer_group=''
    if [[ $1 == 'Ubuntu' ]]; then sudoer_group='sudo'; fi
    if [[ $1 == 'CentOS' ]]; then sudoer_group='wheel'; fi
    if [[ $(whoami) == 'root' ]]; then return 0; fi
    if groups | grep -sqv $sudoer_group; then
        color_print warn "当前用户$(whoami)没有sudo权限, 可能无法下载依赖。"
        color_print warn '接下来将会列出所需依赖包, 如果不确定是否已安装, 请终止脚本！'
        color_print -n warn "有需要的话请联系管理员获取sudo权限, 或者帮忙下载依赖！ "
        count_down -n 3
        return 1
    else
        return 0
    fi
}

function is_package_installed() {
    if [[ $1 == 'Ubuntu' ]]; then
        # https://news.mynavi.jp/techplus/article/20190222-775519/
        if dpkg-query -l | awk '{print $2}' | grep -sq "$1"; then return 0; else return 1; fi
    elif [[ $1 == 'CentOS' ]]; then
        if yum list installed | grep -sq "$1"; then return 0; else return 1; fi
    fi
}

if check_user_is_sudoer "$1"; then
    declare -r is_sudoer='yes'
else
    declare -r is_sudoer='no'
fi

if [[ $1 == 'Ubuntu' ]]; then
    if grep -sq '^VERSION_ID="18.04"' /etc/os-release; then
        declare -a requires=(lib32gcc1 lua5.3 tmux wget git curl)
    else
        declare -a requires=(lib32gcc-s1 lua5.3 tmux wget git curl)
    fi
elif [[ $1 == 'CentOS' ]]; then
    declare -a requires=(glibc.i686 libstdc++ lua tmux wget git which)
fi

echo ''
color_print info '需要下载或更新的软件: '
echo "${requires[@]}"

if [[ $is_sudoer == 'no' ]] && [[ $(whoami) != 'root' ]]; then
    color_print warn '以上软件是否已安装？没有安装的话请联系该服务器的管理员...'
    confirm warn '是否已安装？'
    if [[ $(cat "$ANSWER_PATH") == 'yes' ]]; then exit 0; fi

    color_print error '无权限下载安装必须软件, 终止运行脚本。请联系服务器管理员解决。'
    exit 1
fi

if which sudo > /dev/null 2>&1; [[ $? == 1 ]] && [[ $(whoami) != 'root' ]]; then
    color_print error '没有sudo命令, 无权限下载安装必须软件, 终止运行脚本。请联系服务器管理员解决。'
    exit 1
fi

confirm warn '是否要开始安装依赖？'
if [[ $(cat "$ANSWER_PATH") == 'no' ]]; then
    color_print error '终止安装依赖包, 结束脚本'
    exit 1
fi

color_print -n info '即将以管理员权限下载更新软件, 可能会要求输入当前用户的密码 '
count_down 3

if [[ $1 == 'Ubuntu' ]]; then
    if [[ $(whoami) == 'root' ]]; then
        apt update && apt upgrade -y
    else
        sudo apt update && sudo apt upgrade -y
    fi
    declare -r manager='apt'
fi

if [[ $1 == 'CentOS' ]]; then
    if [[ $(whoami) == 'root' ]]; then
        yum update -y
    else
        sudo yum update -y
    fi
    declare -r manager='yum'
fi

declare package
for package in "${requires[@]}"; do
    if [[ $(whoami) == 'root' ]]; then
        eval "$manager install -y $package"
    else
        eval "sudo $manager install -y $package"
    fi
done

if [[ $1 == 'CentOS' ]] && [[ ! -e /usr/lib64/libcurl-gnutls.so.4 ]]; then
    # To fix: libcurl-gnutls.so.4: cannot open shared object file: No such file or directory
    if [[ $(whoami) == 'root' ]]; then
        ln -s /usr/lib64/libcurl.so.4 /usr/lib64/libcurl-gnutls.so.4
    else
        sudo ln -s /usr/lib64/libcurl.so.4 /usr/lib64/libcurl-gnutls.so.4
    fi
fi

declare flag=1
for package in "${requires[@]}"; do
    if is_package_installed "$package"; then
        color_print success "依赖包$package"
    else
        color_print error "依赖包$package"
        flag=0
    fi
done

echo ''
if [[ $flag == 0 ]]; then color_print error '依赖包安装失败'; exit 1; fi
